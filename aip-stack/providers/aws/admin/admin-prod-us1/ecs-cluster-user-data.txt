#!/bin/bash


#Instance should be added to an security group that allows HTTP outbound
yum -y install aws-cli
yum -y install nfs-utils
yum -y install jq

echo ECS_CLUSTER=aip-adm-ecs-admin >> /etc/ecs/ecs.config
aws configure set preview.efs true

# create a directory for the config files
mkdir -p /root/config/

# download config files from s3 bucket to the config directory
aws s3 sync s3://aip-adm-s3-app-data-us-east-1-661072482170/config/ /root/config/

#Create mount point
mkdir -p /opt/aip

# Retry function
# argument - command and args to execute
# performs exponential backoff on each command failure
function retry() {

	local -r CMD="$@"
	local -i MAX_SLEEP=1024
	local -i sleep_seconds=1

	until $CMD 
	do
		((sleep_seconds <<= 1)) #binary shift, 1, 2, 4, 8, 16, 32, 64, 128
		echo "Command failed, sleep($sleep_seconds)..."
		sleep $((sleep_seconds))  

		if [ $sleep_seconds -ge $MAX_SLEEP ]; then
			echo "Command retry timeout"
			date
			exit 1
		fi

		echo "Retrying..."
	done
}


#Get region of EC2 from instance metadata
EC2_AVAIL_ZONE=`curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone`
EC2_REGION="`echo \"$EC2_AVAIL_ZONE\" | sed -e 's:\([0-9][0-9]*\)[a-z]*\$:\\1:'`"


#Get EFS FileSystemID attribute
#Instance needs to be added to a EC2 role that give the instance at least read access to EFS

EFS_FILE_SYSTEM_ID=$(aws efs describe-file-systems --region $EC2_REGION | jq '.FileSystems[]' | jq 'select(.Name=="aip-adm-efs-admin")' | jq -r '.FileSystemId')
#Check to see if the variable is set. If not, then exit.
if [ -z "$EFS_FILE_SYSTEM_ID" ]; then
        echo "ERROR: variable not set" 1> /etc/efssetup.log
        exit
fi

#Instance needs to be a member of security group that allows 2049 inbound/outbound
#The security group that the instance belongs to has to be added to EFS file system configuration
#Create variables for source and target

DIR_SRC=$EC2_AVAIL_ZONE.$EFS_FILE_SYSTEM_ID.efs.$EC2_REGION.amazonaws.com
DIR_TGT=/opt/aip

#Mount EFS file system

retry mount -t nfs4 -o nfsvers=4.1 $DIR_SRC:/ $DIR_TGT

# naming format of the app data location is /opt/aip/<ecs service name as in .tfvars>
mkdir -p /opt/aip/aip-adm-jira
mkdir -p /opt/aip/aip-adm-confluence
mkdir -p /opt/aip/aip-adm-bitbucket
mkdir -p /opt/aip/aip-adm-artifactory
mkdir -p /opt/aip/aip-adm-jenkins
mkdir -p /opt/aip/aip-adm-blast
mkdir -p /opt/aip/aip-adm-crowd
mkdir -p /opt/aip/aip-adm-sonar

chmod 777 -R /opt/aip/aip-adm-artifactory

#Restart docker deamon and ECS service

sudo service docker restart && sudo start ecs