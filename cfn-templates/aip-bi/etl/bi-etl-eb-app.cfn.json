{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "bi-etl-app.cfn.json",
    "Description": "This template defines the Beanstalk App for ETL services",

    "Parameters": {

        "Environment": {
            "Description": "name of the environment (dev, test, qa, prod)",
            "Default": "dev",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "AppEnvironmentSuffix": {
            "Description": "application environment suffix [ENV-'etl'-REGION or ENV-'bi-app'-REGION]",
            "Default": "etl",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "SolutionStackName": {
          "Description": "BeanstalkVersionString",
          "Type": "String"
        },		
        "ImageId": {
            "Description": "name of the Image (AMI Info)",
            "Default": "ami-62027e08",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "KeyName": {
            "Description": "Keypair to be used for launching instance",
            "Default": "aip-bi-dev-keys",
            "Type": "String"
        },
        "InstanceType": {
            "Description": "Size of the instance [t1.micro,t2.small,r3.large..etc]",
            "Default": "r3.large",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "InstanceSecurityGroups": {
            "Description": "A comma-delimited list of security groups",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "ApplicationURL": {
            "Description": "URL for Elastic BeanStalk Application. Please make sure it doesn't exist [unique]",
			"Default": "bi-etl",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "ApplicationName": {
            "Description": "The name of the Elastic Beanstalk Application",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "S3Bucket": {
            "Description": "S3 bucket name having application zip",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
		},
        "S3Key": {
            "Description": "Application zip file name within ApplicationSourceBundle",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "VpcId": {
            "Description": "name of the VPC",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "PublicSubnets": {
            "Description": "A comma-delimited list of public VPC subnets. ELBs will be launched into this subnet.",
            "Type": "String"
        },
        "PrivateSubnets": {
            "Description": "A comma-delimited list of private VPC subnets. Auto Scaling and RDS will be launched into this subnet.",
            "Type": "String"
        }		
    },

    "Resources": {
	
        "AppEbEnv": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": { "Ref": "ImageId" },
                "InstanceType": { "Ref": "InstanceType" },
                "KeyName": { "Ref": "KeyName"},
                "SecurityGroups": [{ "Ref": "InstanceSecurityGroups" }]
            }
        },

        "AppVersion": {
            "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
            "Properties": {
                "ApplicationName": { "Ref": "ApplicationName" },
                "SourceBundle": {
                    "S3Bucket"  : { "Ref" : "S3Bucket" }, 
                    "S3Key"     : { "Ref" : "S3Key" }
                }
            }
        },

        "APPEnvironment": {
            "Type": "AWS::ElasticBeanstalk::Environment",
            "DependsOn" : "BeanstalkEC2InstancProfile",
            "Properties": {
                "ApplicationName": { "Ref": "ApplicationName" },
                "SolutionStackName": { "Ref": "SolutionStackName" },
                "VersionLabel": {
                    "Ref": "AppVersion"
                },
                "Tier": {
                    "Name": "Worker",
                    "Type": "SQS/HTTP",
                    "Version": ""
                },
                "EnvironmentName": {"Fn::Join": ["", [{"Ref": "Environment"}, "-",{"Ref": "AppEnvironmentSuffix"}, "-",{"Ref": "AWS::Region"}]]},
                "OptionSettings": [
                    {
                        "Namespace": "aws:autoscaling:asg",
                        "OptionName": "MinSize",
                        "Value": "1"
                    },
                    {
                        "Namespace": "aws:autoscaling:asg",
                        "OptionName": "MaxSize",
                        "Value": "1"
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "EC2KeyName",
                        "Value": { "Ref": "KeyName" }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "IamInstanceProfile",
                        "Value": { "Ref": "BeanstalkEC2InstancProfile"}
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "ImageId",
                        "Value": { "Ref": "ImageId" }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "InstanceType",
                        "Value": { "Ref": "InstanceType" }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "RootVolumeSize",
                        "Value": "50"
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "SecurityGroups",
                        "Value": { "Ref": "InstanceSecurityGroups" }
                    },
                    {
                        "Namespace": "aws:autoscaling:trigger",
                        "OptionName": "UpperThreshold",
                        "Value": "6000000"
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "AssociatePublicIpAddress",
                        "Value": "false"
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "ELBSubnets",
                        "Value": { "Ref": "PublicSubnets" }
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "Subnets",
                        "Value": { "Ref": "PrivateSubnets" }
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "VpcId",
                        "Value": { "Ref": "VpcId" }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:command",
                        "OptionName": "BatchSize",
                        "Value": "30"
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:environment",
                        "OptionName": "ServiceRole",
                        "Value": "aws-elasticbeanstalk-service-role"
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:healthreporting:system",
                        "OptionName": "SystemType",
                        "Value": "enhanced"
                    },
					{
						"Namespace": "aws:elasticbeanstalk:sqsd",
						"OptionName": "WorkerQueueURL",
						"Value": {
							"Fn::Join": [
                                            "",
                                            [
                                                "https://sqs.",
   											    {
													"Ref": "AWS::Region"
												},
												".amazonaws.com/",
												{
													"Ref": "AWS::AccountId"
												},
												"/bi-",
												{
													"Ref" : "Environment"
												},
												"-sqs-etl-dataprocess"
                                            ]
                                        ]
						
						}
					},					
					{
						"Namespace": "aws:elasticbeanstalk:sqsd",
						"OptionName": "MimeType",
						"Value": "application/json"
					},
					{
						"Namespace": "aws:elasticbeanstalk:sqsd",
						"OptionName": "HttpConnections",
						"Value": "4"
					},
					{
						"Namespace": "aws:elasticbeanstalk:sqsd",
						"OptionName": "ConnectTimeout",
						"Value": "20"
					},
					{
						"Namespace": "aws:elasticbeanstalk:sqsd",
						"OptionName": "InactivityTimeout",
						"Value": "20"
					},
					{
						"Namespace": "aws:elasticbeanstalk:sqsd",
						"OptionName": "VisibilityTimeout",
						"Value": "600"
					},
					{
						"Namespace": "aws:elasticbeanstalk:sqsd",
						"OptionName": "RetentionPeriod",
						"Value": "345600"
					},
					{
						"Namespace": "aws:elasticbeanstalk:sqsd",
						"OptionName": "MaxRetries",
						"Value": "50"
					},
					{
						"Namespace": "aws:elasticbeanstalk:sqsd",
						"OptionName": "HttpPath",
						"Value": "/etl/sqs"
					},
					{
						"Namespace": "aws:elasticbeanstalk:sqsd",
						"OptionName": "ErrorVisibilityTimeout",
						"Value": "600"
					},
					{
						"OptionName": "LogPublicationControl",
						"Namespace": "aws:elasticbeanstalk:hostmanager",
						"Value": "true"
					},
                    {
                        "OptionName": "Application Healthcheck URL",
                        "Namespace": "aws:elasticbeanstalk:application",
                        "Value": "HTTP:80/bi-dataprocess-service/v1/health/"
                    },
                    {
                        "OptionName": "Automatically Terminate Unhealthy Instances",
                        "Namespace": "aws:elasticbeanstalk:monitoring",
                        "Value": "true"
                    },
                    {
                        "OptionName": "Target",
                        "ResourceName": "AWSEBLoadBalancer",
                        "Namespace": "aws:elb:healthcheck",
                        "Value": "HTTP:80/bi-dataprocess-service/v1/health/"
                    },
                    {
                        "OptionName": "Interval",
                        "ResourceName": "AWSEBLoadBalancer",
                        "Namespace": "aws:elb:healthcheck",
                        "Value": "10"
                    },
                    {
                        "OptionName": "Timeout",
                        "ResourceName": "AWSEBLoadBalancer",
                        "Namespace": "aws:elb:healthcheck",
                        "Value": "5"
                    },
                    {
                        "OptionName": "HealthyThreshold",
                        "ResourceName": "AWSEBLoadBalancer",
                        "Namespace": "aws:elb:healthcheck",
                        "Value": "3"
                    },
                    {
                        "OptionName": "UnhealthyThreshold",
                        "ResourceName": "AWSEBLoadBalancer",
                        "Namespace": "aws:elb:healthcheck",
                        "Value": "5"
                    }                                        					
                ]
            }
        },

        "BeanstalkEC2Role": {
             "Type": "AWS::IAM::Role",
             "Properties": {
                "AssumeRolePolicyDocument": {
                   "Version" : "2012-10-17",
                   "Statement": [ {
                      "Effect": "Allow",
                      "Principal": {
                         "Service": [ "ec2.amazonaws.com" ]
                      },
                      "Action": [ "sts:AssumeRole" ]
                   } ]
                },
                "Policies" : [{
                   "PolicyName": "EB_MultiContainer_App_ECS",
                   "PolicyDocument": {
                     "Version": "2012-10-17",
                     "Statement" : [ {
                        "Effect" : "Allow",
                        "Action" : [ 
                                "ecs:StartTask",
                                "ecs:StopTask",
                                "ecs:RegisterContainerInstance",
                                "ecs:DeregisterContainerInstance",
                                "ecs:DescribeContainerInstances",
                                "ecs:DiscoverPollEndpoint",
                                "ecs:Submit*",
                                "ecs:CreateCluster",
                                "ecs:Poll"
                                ],
                         "Resource" : "*"
                    },
                    {
                        "Effect" : "Allow",
                        "Action" : [ "s3:PutObject" ],
                        "Resource" : "arn:aws:s3:::elasticbeanstalk-*/resources/environments/logs/*"
                    },
				    {
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams"
                        ],
                        "Resource": [
                            "arn:aws:logs:*:*:*"
                        ]
                    }]
               }
              }],
                "ManagedPolicyArns": ["arn:aws:iam::aws:policy/AmazonS3FullAccess",
                                    "arn:aws:iam::aws:policy/AmazonSQSFullAccess", 
                                    "arn:aws:iam::aws:policy/AmazonSNSFullAccess",
                                    "arn:aws:iam::aws:policy/CloudWatchFullAccess",
                                    "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
                                    ],
                "Path": "/"
             }
        },
        "BeanstalkEC2InstancProfile" : {
           "Type": "AWS::IAM::InstanceProfile",
           "Properties": {
              "Path": "/",
              "Roles": [ { "Ref": "BeanstalkEC2Role" } ]
           }
        }			
    },

    "Outputs": {
        "BeanstalkEC2InstancProfile": {
            "Description": "Beanstalk EC2 Instance Profile",
            "Value": {"Ref" : "BeanstalkEC2InstancProfile"}
        }
    }
}