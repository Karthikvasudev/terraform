{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "Use file aip-admin-resources.cfn.json for Admin VPC specific resources.",
    "Description": "Application specific AWS resources - aip-bi-aws-resources.cfn.json",


    "Parameters": {
        "Environment": {
            "Description": "name of the Environment (dev, test, qa, prod)",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
		"Lambdarole": {
            "Description": "name of the IAM role ",
			"Default" : "s3_lambda_copy",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
		"Bucket": {
            "Description": "Bucket containing the lambda code .zip ",
			"Default" : "aip-devops-us-east-1-661072482170",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
		"S3Key": {
            "Description": "s3 key of the lambda code .zip ",
			"Default" : "lambda/s3Archival/lambda_handler.zip",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        }
    },
    "Resources": {
        "Topic": {
			"Type": "AWS::SNS::Topic",
			"Properties": {
				"TopicName" : {"Fn::Join": ["", ["bi-", {"Ref": "Environment"},"-sns-file-uploaded"]]},
				"Subscription" :[
				{"Endpoint" : { "Fn::GetAtt": ["FunctionTopicSubscription", "Arn"] },
					"Protocol" : "lambda"
				}
				]
			}
		},
		"TopicPolicy":{
		    "Type" : "AWS::SNS::TopicPolicy",
			"DependsOn": ["Topic"],
			"Properties" :{
				"PolicyDocument" : {
					 "Version": "2008-10-17",
					"Id": "__default_policy_ID",
					"Statement": [
					{
					  "Sid": "__default_statement_ID",
					  "Effect": "Allow",
					  "Principal": {
						"AWS": "*"
					  },
					  "Action": [
						"SNS:Publish",
						"SNS:RemovePermission",
						"SNS:SetTopicAttributes",
						"SNS:DeleteTopic",
						"SNS:ListSubscriptionsByTopic",
						"SNS:GetTopicAttributes",
						"SNS:Receive",
						"SNS:AddPermission",
						"SNS:Subscribe"
					  ],
					  "Resource": "*",
					  "Condition": {
						"StringEquals": {
						  "AWS:SourceOwner": {"Ref" : "AWS::AccountId"}
						}
					  }
					},
					{
					  "Sid": "__console_pub_0",
					  "Effect": "Allow",
					  "Principal": {
						"AWS": "*"
					  },
					  "Action": "SNS:Publish",
					  "Resource": "*"
					},
					{
					  "Sid": "__console_sub_0",
					  "Effect": "Allow",
					  "Principal": {
						"AWS": "*"
					  },
					  "Action": [
						"SNS:Subscribe",
						"SNS:Receive"
					  ],
					  "Resource": "*"
					}
					]
				},
				"Topics": [{"Ref": "Topic" }]
			}
		},
		"FunctionTopicSubscription": {
			"Type": "AWS::Lambda::Function",
			
			"Properties": {
				"Handler": "lambda_handler.lambda_handler",
				"Role": {"Fn::Join": ["", ["arn:aws:iam::", {"Ref": "AWS::AccountId"},":role/",{ "Ref" : "Lambdarole" }]]},
				"Code": {
						"S3Bucket": {"Ref": "Bucket"},
						"S3Key": {"Ref": "S3Key"}	
				},
				"Runtime": "python2.7",
				"MemorySize": 1024
			}
		}
		
}
}