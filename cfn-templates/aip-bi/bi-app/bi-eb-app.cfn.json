{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "aip-bi-eb-app.cfn.json",
    "Description": "This template defines the Beanstalk App",

    "Mappings" : {
        "RegionMap" : {
          "us-east-1"      : { "dropregion" : "false"},
          "us-west-1"      : { "dropregion" : "true" },
          "us-west-2"      : { "dropregion" : "true" },
          "eu-west-1"      : { "dropregion" : "false" },
          "eu-central-1"   : { "dropregion" : "true" },
          "sa-east-1"      : { "dropregion" : "true" },
          "ap-southeast-1" : { "dropregion" : "true" },
          "ap-southeast-2" : { "dropregion" : "true" },
          "ap-northeast-1" : { "dropregion" : "true" },
          "ap-northeast-2" : { "dropregion" : "true" }
        }
    },
    "Parameters": {

        "Environment": {
            "Description": "name of the environment (dev, test, qa, prod)",
            "Default": "dev",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "ImageId": {
            "Description": "name of the Image (AMI Info)",
            "Default": "ami-5943023c",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "KeyName": {
            "Description": "Keypair to be used for launching instance",
            "Default": "aip-bi-dev-keys",
            "Type": "String"
        },
        "InstanceType": {
            "Description": "Size of the instance [t1.micro,t2.small,m3.large..etc]",
            "Default": "t3.medium",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "InstanceSecurityGroups": {
            "Description": "A comma-delimited list of security groups",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "ApplicationURL": {
            "Description": "URL for Elastic BeanStalk Application. Please make sure it doesn't exist [unique]",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "ApplicationName": {
            "Description": "The name of the Elastic Beanstalk Application",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "S3Bucket": {
            "Description": "S3 bucket name having application zip",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
		},
        "S3Key": {
            "Description": "Application zip file name within ApplicationSourceBundle",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "SolutionStackName": {
            "Description": "BeanstalkVersionString",
            "Type": "String"
        },
        "VpcId": {
            "Description": "name of the VPC",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "PublicSubnets": {
            "Description": "A comma-delimited list of public VPC subnets. ELBs will be launched into this subnet.",
            "Type": "String"
        },
        "PrivateSubnets": {
            "Description": "A comma-delimited list of private VPC subnets. Auto Scaling and RDS will be launched into this subnet.",
            "Type": "String"
        },
        "R53HostedZoneName": {
            "Description": "Name of the R53 HostedZone[aip.local.]",
			"Default": "aliniqbis.local.",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
		"R53RecordSetNamePrefix": {
			"Description": "Name of the R53 Record Set[proxy,bi,aip]",
			"Default": "bi",
			"Type": "String",
			"MinLength": "1",
			"MaxLength": "255"
		},
		"R53RecordSetNameSuffix": {
			"Description": "Name of the R53 Record Set[us-1.aliniqbis.local]",
			"Default": "us-1.aliniqbis.local",
			"Type": "String",
			"MinLength": "1",
			"MaxLength": "255"
		},
        "AutoScaleMinSize": {
            "Description": "AutoScaling Minimum number of instances",
            "Default": "2",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "AutoScaleMaxSize": {
            "Description": "AutoScaling Maximum number of instances",
            "Default": "20",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        }   				
    },


    "Conditions" : {
        "ShortEnvironmentName" : {"Fn::Equals" : [
            {"Fn::FindInMap" : ["RegionMap", { "Ref" : "AWS::Region" }, "dropregion" ]}, "true"]}
    },


    "Resources": {

        "BIAppEbEnv": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": { "Ref": "ImageId" },
                "InstanceType": { "Ref": "InstanceType" },
                "KeyName": { "Ref": "KeyName"},
                "SecurityGroups": [{ "Ref": "InstanceSecurityGroups" }]
            }
        },

        "BIAppVersion": {
            "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
            "DependsOn" : "BIAppEbEnv",
            "Properties": {
                "ApplicationName": { "Fn::Join": ["-", [{"Ref": "ApplicationName"}, {"Ref": "AWS::Region"}]]},
                "SourceBundle": {
                    "S3Bucket"  : { "Ref" : "S3Bucket" }, 
                    "S3Key"     : { "Ref" : "S3Key" }
                }
            }
        },

        "BIAPPEnvironment": {
            "Type": "AWS::ElasticBeanstalk::Environment",
            "DependsOn" : "BeanstalkEC2InstancProfile",
            "Properties": {
                "ApplicationName": { "Fn::Join": ["-", [{"Ref": "ApplicationName"}, {"Ref": "AWS::Region"}]]},
                "SolutionStackName": { "Ref": "SolutionStackName" },
                "VersionLabel": {
                    "Ref": "BIAppVersion"
                },
                "Tier": {
                    "Name": "WebServer",
                    "Type": "Standard",
                    "Version": " "
                },
                "EnvironmentName": {
                    "Fn::If" : [ "ShortEnvironmentName",
                        {"Fn::Join": ["", [{"Ref": "Environment"}, "-",{"Ref": "ApplicationName"}]]},
                        {"Fn::Join": ["", [{"Ref": "Environment"}, "-",{"Ref": "ApplicationName"}, "-",{"Ref": "AWS::Region"}]]}
                    ]
                },
                "OptionSettings": [
                    {
                        "Namespace": "aws:autoscaling:asg",
                        "OptionName": "MinSize",
                        "Value": { "Ref" : "AutoScaleMinSize" }                    },
                    {
                        "Namespace": "aws:autoscaling:asg",
                        "OptionName": "MaxSize",
                        "Value": { "Ref" : "AutoScaleMaxSize" }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "EC2KeyName",
                        "Value": { "Ref": "KeyName" }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "IamInstanceProfile",
                        "Value": { "Ref": "BeanstalkEC2InstancProfile"}
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "ImageId",
                        "Value": { "Ref": "ImageId" }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "InstanceType",
                        "Value": { "Ref": "InstanceType" }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "RootVolumeSize",
                        "Value": "50"
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "SecurityGroups",
                        "Value": { "Ref": "InstanceSecurityGroups" }
                    },
                    {
                        "Namespace": "aws:autoscaling:trigger",
                        "OptionName": "UpperThreshold",
                        "Value": "6000000"
                    },
                    {
                        "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                        "OptionName": "MaxBatchSize",
                        "Value": "1"
                    },
                    {
                        "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                        "OptionName": "MinInstancesInService",
                        "Value": "1"
                    },
                    {
                        "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                        "OptionName": "RollingUpdateEnabled",
                        "Value": "true"
                    },
                    {
                        "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                        "OptionName": "RollingUpdateType",
                        "Value": "Health"
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "AssociatePublicIpAddress",
                        "Value": "false"
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "ELBSubnets",
                        "Value": { "Ref": "PublicSubnets" }
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "Subnets",
                        "Value": { "Ref": "PrivateSubnets" }
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "VpcId",
                        "Value": { "Ref": "VpcId" }
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "ELBScheme",
                        "Value": "internal"
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:command",
                        "OptionName": "BatchSize",
                        "Value": "30"
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:environment",
                        "OptionName": "ServiceRole",
                        "Value": "aws-elasticbeanstalk-service-role"
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:healthreporting:system",
                        "OptionName": "SystemType",
                        "Value": "enhanced"
                    },
                    {
                        "OptionName": "Application Healthcheck URL",
                        "Namespace": "aws:elasticbeanstalk:application",
                        "Value": "HTTP:80/api/bi/v1/health"
                    },
                    {
                        "OptionName": "Automatically Terminate Unhealthy Instances",
                        "Namespace": "aws:elasticbeanstalk:monitoring",
                        "Value": "true"
                    },
                    {
                        "OptionName": "Target",
                        "ResourceName": "AWSEBLoadBalancer",
                        "Namespace": "aws:elb:healthcheck",
                        "Value": "HTTP:80/api/bi/v1/health"
                    },
                    {
                        "OptionName": "Interval",
                        "ResourceName": "AWSEBLoadBalancer",
                        "Namespace": "aws:elb:healthcheck",
                        "Value": "10"
                    },
                    {
                        "OptionName": "Timeout",
                        "ResourceName": "AWSEBLoadBalancer",
                        "Namespace": "aws:elb:healthcheck",
                        "Value": "5"
                    },
                    {
                        "OptionName": "HealthyThreshold",
                        "ResourceName": "AWSEBLoadBalancer",
                        "Namespace": "aws:elb:healthcheck",
                        "Value": "3"
                    },
                    {
                        "OptionName": "UnhealthyThreshold",
                        "ResourceName": "AWSEBLoadBalancer",
                        "Namespace": "aws:elb:healthcheck",
                        "Value": "5"
                    },
                    {
                        "Namespace": "aws:elb:loadbalancer",
                        "OptionName": "CrossZone",
                        "Value": "true"
                    },
                    {
                        "Namespace": "aws:elb:loadbalancer",
                        "OptionName": "LoadBalancerHTTPPort",
                        "Value": "80"
                    },
                    {
                        "Namespace": "aws:elb:policies",
                        "OptionName": "ConnectionDrainingEnabled",
                        "Value": "true"
                    },
                    {
                        "OptionName": "LogPublicationControl",
                        "Namespace": "aws:elasticbeanstalk:hostmanager",
                        "Value": "true"
                    }
                ]
            }
        },

    	"AppAccessCname" : {
    		"Type" : "AWS::Route53::RecordSetGroup",
    		"DependsOn" : "BIAPPEnvironment",
    		"Properties" : {
    			"HostedZoneName" : { "Ref": "R53HostedZoneName" },
    			"Comment" : "Assigning route 53 cname for ELB's DNS record.",
    			"RecordSets" : [
    			  {
    				"Name" : { "Fn::Join": ["-", [{ "Ref": "R53RecordSetNamePrefix" },{"Ref": "Environment"}, {"Ref": "R53RecordSetNameSuffix"}]]},
    				"Type" : "CNAME",
    				"TTL" : "900",
    				"ResourceRecords" : [{"Fn::GetAtt": ["BIAPPEnvironment", "EndpointURL"]}]
    			  }
    			  ]
    		}
    	},

        "BeanstalkEC2Role": {
             "Type": "AWS::IAM::Role",
             "Properties": {
                "AssumeRolePolicyDocument": {
                   "Version" : "2012-10-17",
                   "Statement": [ {
                      "Effect": "Allow",
                      "Principal": {
                         "Service": [ "ec2.amazonaws.com" ]
                      },
                      "Action": [ "sts:AssumeRole" ]
                   } ]
                },
                "Policies" : [{
                   "PolicyName": "EB_MultiContainer_App_ECS",
                   "PolicyDocument": {
                     "Version": "2012-10-17",
                     "Statement" : [ {
                        "Effect" : "Allow",
                        "Action" : [ 
                                "ecs:StartTask",
                                "ecs:StopTask",
                                "ecs:RegisterContainerInstance",
                                "ecs:DeregisterContainerInstance",
                                "ecs:DescribeContainerInstances",
                                "ecs:DiscoverPollEndpoint",
                                "ecs:Submit*",
                                "ecs:CreateCluster",
                                "ecs:Poll"
                                ],
                    "Resource" : "*"
                 },
                 {
                    "Effect" : "Allow",
                    "Action" : [ "s3:PutObject" ],
                    "Resource" : "arn:aws:s3:::elasticbeanstalk-*/resources/environments/logs/*"
                 }]
               }
              }],
                "ManagedPolicyArns": ["arn:aws:iam::aws:policy/AmazonS3FullAccess",
                                    "arn:aws:iam::aws:policy/CloudWatchFullAccess",
                                    "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
                                    "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
									],
                "Path": "/"
             }
        },
        "BeanstalkEC2InstancProfile" : {
           "Type": "AWS::IAM::InstanceProfile",
           "Properties": {
              "Path": "/",
              "Roles": [ { "Ref": "BeanstalkEC2Role" } ]
           }
        }		
},
    "Outputs": {
        "URL": {
            "Description": "URL of the AWS Elastic Beanstalk Environment",
            "Value": {"Fn::Join": ["", ["http://", {"Fn::GetAtt": ["BIAPPEnvironment", "EndpointURL"]} ]] }
            },
        "BeanstalkEC2Role": {
            "Description": "Beanstalk EC2 Instance Role",
            "Value": {"Ref" : "BeanstalkEC2Role"}
        },
        "ShortNames": {
            "Description": "Use EB Env Short Name Format",
            "Value": {
                    "Fn::If" : [ "ShortEnvironmentName",
                        "true - use short name",
                        "false - don't use short name"
                    ]
            }
        }
    }

}