{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "aip-base-app.cfn.json",
    "Description": "This template defines the Beanstalk App for proxy services",

    "Parameters": {

        "Environment": {
            "Description": "name of the environment (dev, test, qa, prod)",
            "Default": "dev",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "AppEnvironmentSuffix": {
            "Description": "application environment suffix [ENV-'aip'-REGION or ENV-'bi-app'-REGION]",
            "Default": "proxy",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },		
        "ImageId": {
            "Description": "name of the Image (AMI Info)",
            "Default": "ami-5943023c",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "KeyName": {
            "Description": "Keypair to be used for launching instance",
            "Default": "aip-bi-dev-keys",
            "Type": "String"
        },
        "InstanceType": {
            "Description": "Size of the instance [t1.micro,t2.small,m3.large..etc]",
            "Default": "m3.medium",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "InstanceSecurityGroups": {
            "Description": "A comma-delimited list of security groups",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "ApplicationURL": {
            "Description": "URL for Elastic BeanStalk Application. Please make sure it doesn't exist [unique]",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "ApplicationName": {
            "Description": "The name of the Elastic Beanstalk Application",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "S3Bucket": {
            "Description": "S3 bucket name having application zip",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
		},
        "S3Key": {
            "Description": "Application zip file name within ApplicationSourceBundle",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "VpcId": {
            "Description": "name of the VPC",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
        "PublicSubnets": {
            "Description": "A comma-delimited list of public VPC subnets. ELBs will be launched into this subnet.",
            "Type": "String"
        },
        "PrivateSubnets": {
            "Description": "A comma-delimited list of private VPC subnets. Auto Scaling and RDS will be launched into this subnet.",
            "Type": "String"
        },
        "R53HostedZoneName": {
            "Description": "Name of the R53 HostedZone[aip.local.]",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255"
        },
		"R53HostedZoneID": {
			"Description": "R53 Zone ID",
			"Type": "String",
			"MinLength": "1",
			"MaxLength": "255"
		},
		"R53RecordSetNameSuffix": {
			"Description": "Name of the R53 Record Set",
			"Type": "String",
			"MinLength": "1",
			"MaxLength": "255"
		}		
    },


    "Resources": {
	

        "AppEbEnv": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": { "Ref": "ImageId" },
                "InstanceType": { "Ref": "InstanceType" },
                "KeyName": { "Ref": "KeyName"},
                "SecurityGroups": [{ "Ref": "InstanceSecurityGroups" }]
            }
        },

        "AppVersion": {
            "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
            "Properties": {
                "ApplicationName": { "Ref": "ApplicationName" },
                "SourceBundle": {
                    "S3Bucket"  : { "Ref" : "S3Bucket" }, 
                    "S3Key"     : { "Ref" : "S3Key" }
                }
            }
        },

        "APPEnvironment": {
            "Type": "AWS::ElasticBeanstalk::Environment",
            "Properties": {
                "ApplicationName": { "Ref": "ApplicationName" },
                "SolutionStackName": "64bit Amazon Linux 2015.09 v2.0.4 running Multi-container Docker 1.7.1 (Generic)",
                "VersionLabel": {
                    "Ref": "AppVersion"
                },
                "Tier": {
                    "Name": "WebServer",
                    "Type": "Standard",
                    "Version": " "
                },
                "EnvironmentName": {"Fn::Join": ["", [{"Ref": "Environment"}, "-",{"Ref": "AppEnvironmentSuffix"}, "-",{"Ref": "AWS::Region"}]]},
                "OptionSettings": [
                    {
                        "Namespace": "aws:autoscaling:asg",
                        "OptionName": "MinSize",
                        "Value": "2"
                    },
                    {
                        "Namespace": "aws:autoscaling:asg",
                        "OptionName": "MaxSize",
                        "Value": "20"
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "EC2KeyName",
                        "Value": { "Ref": "KeyName" }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "IamInstanceProfile",
                        "Value": { "Ref": "BeanstalkEC2InstancProfile"}
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "ImageId",
                        "Value": { "Ref": "ImageId" }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "InstanceType",
                        "Value": { "Ref": "InstanceType" }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "RootVolumeSize",
                        "Value": "50"
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "SecurityGroups",
                        "Value": { "Ref": "InstanceSecurityGroups" }
                    },
                    {
                        "Namespace": "aws:autoscaling:trigger",
                        "OptionName": "UpperThreshold",
                        "Value": "6000000"
                    },
                    {
                        "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                        "OptionName": "MaxBatchSize",
                        "Value": "1"
                    },
                    {
                        "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                        "OptionName": "MinInstancesInService",
                        "Value": "1"
                    },
                    {
                        "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                        "OptionName": "RollingUpdateEnabled",
                        "Value": "true"
                    },
                    {
                        "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                        "OptionName": "RollingUpdateType",
                        "Value": "Health"
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "AssociatePublicIpAddress",
                        "Value": "false"
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "ELBSubnets",
                        "Value": { "Ref": "PublicSubnets" }
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "Subnets",
                        "Value": { "Ref": "PrivateSubnets" }
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "VpcId",
                        "Value": { "Ref": "VpcId" }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:command",
                        "OptionName": "BatchSize",
                        "Value": "30"
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:environment",
                        "OptionName": "ServiceRole",
                        "Value": "aws-elasticbeanstalk-service-role"
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:healthreporting:system",
                        "OptionName": "SystemType",
                        "Value": "enhanced"
                    },
			        {
                        "OptionName": "LoadBalancerSSLPortProtocol", 
                        "Namespace": "aws:elb:loadbalancer", 
                        "Value": "HTTPS"
                    },
                    {
                        "Namespace": "aws:elb:loadbalancer",
                        "OptionName": "CrossZone",
                        "Value": "true"
                    },
                    {
                        "OptionName": "Target", 
                        "Namespace": "aws:elb:healthcheck", 
                        "Value": "TCP:443"
                    }, 
                    {
                        "OptionName": "InstancePort", 
                        "Namespace": "aws:elb:listener:443", 
                        "Value": "443"
                    },
                    {
                        "OptionName": "InstanceProtocol", 
                        "Namespace": "aws:elb:listener:443", 
                        "Value": "TCP"
                    }, 
                    {
                        "OptionName": "ListenerEnabled", 
                        "Namespace": "aws:elb:listener:443", 
                        "Value": "true"
                    }, 
					{
                        "OptionName": "ListenerProtocol", 
                        "Namespace": "aws:elb:listener:443", 
                        "Value": "TCP"
                    }, 
                    {
                        "OptionName": "Interval", 
                        "Namespace": "aws:elb:healthcheck", 
                        "Value": "10"
                    }, 
                    {
                        "OptionName": "Timeout", 
                        "Namespace": "aws:elb:healthcheck", 
                        "Value": "5"
                    },
                    {
                        "Namespace": "aws:elb:healthcheck",
                        "OptionName": "Interval",
                        "Value": "10"
                    },
                    {
                        "Namespace": "aws:elb:loadbalancer",
                        "OptionName": "CrossZone",
                        "Value": "true"
                    },
                    {
                        "Namespace": "aws:elb:loadbalancer",
                        "OptionName": "LoadBalancerHTTPPort",
                        "Value": "80"
                    },
                    {
                        "Namespace": "aws:elb:policies",
                        "OptionName": "ConnectionDrainingEnabled",
                        "Value": "true"
                    }
                ]
            }
        },
	    "AppR53Entry" : {
            "Type" : "AWS::Route53::RecordSetGroup",
			"DependsOn" : "APPEnvironment",
            "Properties" : {
                "HostedZoneName" : { "Ref": "R53HostedZoneName" },
                "Comment"   : "Assigning route 53 A record for ELB's DNS record.",
                "RecordSets" : [ {
                    "Name"      : {"Ref" : "R53RecordSetNameSuffix"},
                    "Type": "A",
                    "AliasTarget" : {
                      "HostedZoneId" : { "Ref" : "R53HostedZoneID"},
                      "DNSName" : {"Fn::Join": ["", ["dualstack.", {"Fn::GetAtt": ["APPEnvironment", "EndpointURL"]} ]] }
                    }
                }]
            }
        },

        "BeanstalkEC2Role": {
             "Type": "AWS::IAM::Role",
             "Properties": {
                "AssumeRolePolicyDocument": {
                   "Version" : "2012-10-17",
                   "Statement": [ {
                      "Effect": "Allow",
                      "Principal": {
                         "Service": [ "ec2.amazonaws.com" ]
                      },
                      "Action": [ "sts:AssumeRole" ]
                   } ]
                },
                "Policies" : [{
                   "PolicyName": "EB_MultiContainer_App_ECS",
                   "PolicyDocument": {
                     "Version": "2012-10-17",
                     "Statement" : [ {
                        "Effect" : "Allow",
                        "Action" : [ 
                                "ecs:StartTask",
                                "ecs:StopTask",
                                "ecs:RegisterContainerInstance",
                                "ecs:DeregisterContainerInstance",
                                "ecs:DescribeContainerInstances",
                                "ecs:DiscoverPollEndpoint",
                                "ecs:Submit*",
                                "ecs:CreateCluster",
                                "ecs:Poll"
                                ],
                    "Resource" : "*"
                 },
                 {
                    "Effect" : "Allow",
                    "Action" : [ "s3:PutObject" ],
                    "Resource" : "arn:aws:s3:::elasticbeanstalk-*/resources/environments/logs/*"
                 }]
               }
              }],
                "ManagedPolicyArns": ["arn:aws:iam::aws:policy/AmazonS3FullAccess",
                                    "arn:aws:iam::aws:policy/AmazonSQSFullAccess", 
                                    "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
                                    "arn:aws:iam::aws:policy/AmazonSNSFullAccess",
                                    "arn:aws:iam::aws:policy/CloudWatchFullAccess",
                                    "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"],
                "Path": "/"
             }        
        },
        "BeanstalkEC2InstancProfile" : {
           "Type": "AWS::IAM::InstanceProfile",
           "Properties": {
              "Path": "/",
              "Roles": [ { "Ref": "BeanstalkEC2Role" } ]
           }
        }			
    },

    "Outputs": {
        "URL": {
            "Description": "URL of the AWS Elastic Beanstalk Environment",
            "Value": {"Fn::Join": ["", ["http://", {"Fn::GetAtt": ["APPEnvironment", "EndpointURL"]} ]] }}
    }
}