dock and To-Do list:

NAT instance type Allowed values - needs to be updated

Mappings AWSNATAMI - requires updates for non-us-east-1 regions

Polices - definition needs to be provided. May need seperate CF template for this or depend on manual creation in each region/account. Case - ETL-Role is defined in aip-bi-aws-resources.cfn.json, but does not create the role under IAM. Unless the role already exists, the CF launch fails.

remove ApplicatoinSourceBundle - from all beanstalk related templates.

Admin VPC template - set DHCP option to true in support of R53.

To-Dos:
	- Review Platform Services docs on Confluence
	- Jenkins: Port 9418 open Privage SG Outbound & Inbound thru Nat instance. Update Admin VPC template. User Date Git command need. Verify with Andreas again.
	- DNS - make a Public file. Also, automate privte VPC Id finding and template constructiion
	- Admin VPC: Setup VPN stack or make seperate stack. Must add Route VPG to Private subnets (not Public however).
	- IAM roles: defined in CF for Admin and All Beanstalk needs, Lambda
	- Lockdown Public visibility of BI apps via SG or other
	- Add to vpc private database SG - PostgreSQL inbound from 10.85.0.0/16 (for Workstation PGadmin from Admin VPC use)

Issues - CNAME - each app delete stack operation requies MANUAL removal of CNAME value - not so great!

Note: Jenkins database connection must be URI encoded as part of connection string. 
We have to remember to URI encode the credentials as well for Jenkins:
	postgres://api_user:SomePassword%24%25%233@bi-dev-rds-dw-us-east-1d.c1lwzjddrfro.us-east-1.rds.amazonaws.com:5432/postgres

Need to ensure left over apps are not still in Beanstalk. 
	19:58:28 UTC-0700	CREATE_FAILED	AWS::ElasticBeanstalk::Application	App	aip-us-east-1 already exists

Fix ETL App Subnets:
Web tier subnets: subnet-c2b583e9,subnet-8f29f3b2
ETL tier subnets: subnet-c1b583ea,subnet-8e29f3b3

VPC deployments: - R53 manual associate aip.local and aliniqbis.local for each vpc after create event.

BI App Issue:
http://dev-bi-app-us-east-1-ac4xtayjng.elasticbeanstalk.com/
internal-awseb-e-b-AWSEBLoa-1K4CBDW2HRM0L-1574079299.us-east-1.elb.amazonaws.com
http://internal-awseb-e-b-awsebloa-1wtl8rls29xxu-1553663982.us-east-1.elb.amazonaws.com/
http://dev-bi-app-us-east-1-ac4xtayjng.elasticbeanstalk.com/

.78
zP29gG.%4Z

NAT SG: sg-f37b7794  
Win2 SG: sg-076dcf61

abbott-add.awsapps.com

# docker 
sudo docker ps -a
get name of containers - grab names of EC2 
docker logs container
sudo docker info


Region porting notes eu-central-1:
Create keys - aip-adm-keys
Pick an Amazone Linux NAT (HVM) AMI in each region. Same to --NAT notes file.

Workspaces:
	- Proxy suggested by Kathy: 10.254.245.203:80
	- Proxy via nslookup: pac.lb.abbott.corp - 10.254.250.39:80


# Fix Dev environment Platform Services
aws cloudformation create-stack \
--stack-name aip-platform-dev-master-repair \
--template-body file://aip-platform-master.cfn.json \
--parameters file://aip-platform-master-dev-launch-params-us-east-1.json \
--capabilities CAPABILITY_IAM --disable-rollback


#Latest EB ECS: aws-elasticbeanstalk-amzn-2015.09.1.x86_64-ecs-pv-201511050720 (ami-62027e08)

# Test policy on SQS queue with specific SNS topics allowed
aws cloudformation create-stack \
--stack-name testpolicy \
--template-body file://-testpolicy.cfn.json \
--capabilities CAPABILITY_IAM --disable-rollback  --profile sandbox


aip-platform-aws-resources.cfn.json


11/24 - Perf team whitelists for test & Prod
130.36.0.0/16,10.0.0.0/8,209.195.3.114,209.195.3.121,50.79.128.73,50.79.128.75,23.23.88.217,207.229.173.88,174.23.27.182,50.254.15.138

Proxy App builds deployed - Prod #53, Test #54

postgres://api_user%3AFkgel%24%25%233@bi-qa-rds-dw-r1-us-east-1d.c1lwzjddrfro.us-east-1.rds.amazonaws.com:5432/postgres


aws-elasticbeanstalk-amzn-2015.03.1.x86_64-ecs-hvm-201509182207 (ami-7da9d918)

---
64bit Amazon Linux 2015.09 v2.0.4 running Multi-container Docker 1.7.1 (Generic)
aws-elasticbeanstalk-amzn-2015.09.1.x86_64-ecs-pv-201511050720 (ami-62027e08)
---

James Mburu info
Hsaetrp$&#*!
	I have updated the sa password for the aws-informatics (Public Dev) and bi-dev-rds-dw-us-east-1 (CI/CD Dev) to Pr0jectOnT!me so as to match the standard password in use by the other instances. We will now have the same sa password across all instances. 


	aws elasticbeanstalk describe-configuration-settings --environment-name qa-etl-us-east-1 --application-name etl-us-east-1 

# When changing to a newer Docker AMI-id, Beanstalk & Docker AMI must match for "SolutionStackName" property. Git it with:
$ aws elasticbeanstalk list-available-solution-stacks | grep Docker

devops-aip-chr-us-east-1

AIP:
internal-awseb-e-s-AWSEBLoa-1KAUP5M6FWM9W-1768590128.us-east-1.elb.amazonaws.com
internal-awseb-e-s-AWSEBLoa-1KAUP5M6FWM9W-1768590128.us-east-1.elb.amazonaws.com

BI:
internal-awseb-e-9-AWSEBLoa-34U2LK7TVYMT-904844333.us-east-1.elb.amazonaws.com
internal-awseb-e-9-AWSEBLoa-34U2LK7TVYMT-904844333.us-east-1.elb.amazonaws.com

bi-datapipeline SQSQ removed per Adam Levar email 12/17/15
	                        "Condition": {
                                "ArnEquals": {
		                            "aws:SourceArn": [
		                            {"Fn::Join": ["", ["arn:aws:sqs:*:*:", "aip-", {"Ref": "Environment"}, "-sns-day-changed"]]},
                                    {"Fn::Join": ["", ["arn:aws:sqs:*:*:", "bi-",  {"Ref": "Environment"}, "-sns-data-loaded"]]},
                                    {"Fn::Join": ["", ["arn:aws:sqs:*:*:", "bi-",  {"Ref": "Environment"}, "-sns-data-process"]]}
                                    ]
                              }
                            }
----
aws elasticbeanstalk describe-configuration-settings --environment-name dev-etl-us-east-1 --application-name etl-us-east-1

------------------
"64bit Amazon Linux 2015.09 v2.0.6 running Multi-container Docker 1.7.1 (Generic)"

Matches Docker AMI:

AMI ID
ami-27affd4d

AMI Name
aws-elasticbeanstalk-amzn-2015.09.1.x86_64-ecs-pv-201512302102

Owner
102837901569

Source
amazon/aws-elasticbeanstalk-amzn-2015.09.1.x86_64-ecs-pv-201512302102

Creation date
December 30, 2015 at 1:05:34 PM UTC-8

Platform
Amazon Linux

Architecture
x86_64

Image Type
machine

Virtualization type
paravirtual



andreas.rimbe@abbott.com, randolph.kelley@cognizant.com, rakesh.raghavan@cognizant.com
---
I see your existing environments are running on N. Virginia (us-east-1) and I can confirm to you that this beanstalk stack will launch the AMI ami-27affd4d (aws-elasticbeanstalk-amzn-2015.09.1.x86_64-ecs-pv-201512302102) on N. Virginia Region.
---
NAT Instances by Region:
us-east-1 amzn-ami-vpc-nat-pv-2015.03.0.x86_64-ebs (ami-c02b04a8)
eu-west-1 amzn-ami-vpc-nat-pv-2015.03.0.x86_64-ebs (ami-cb7de3bc)
eu-central-1 
ap-northeast-1 amzn-ami-vpc-nat-pv-2015.03.0.x86_64-ebs (ami-c7e016c7)

--- eu-west-1 Porting notes ---
- Select NAT AMI for templates
- Select Beanstalk docker AMI for templates 
	aws-elasticbeanstalk-amzn-2015.09.1.x86_64-ecs-pv-201512302317 (ami-5b63cc28)
- create admin and VPC specific keys
- ?? Select Beanstalk Multi-Docker Container AMI ??
- VPN - setup ingress/egress rules to support VPN of other regions and/or Abbott IP range in Admin and other VPCs
- IAM roles are globally available - good!
- Once VPC (Admin and Prod) are created, update App parameter files with vpc, subnets, security group IDs. Also, associate VPCs with R53 (3 private zones).
- Chronos 1st app:
	edited aip-chronos-master.cfn.json - S3Bucket parameter changed from Region call to literal "us-east-1" in three locations (TemplateURL x2, S3Bucket)
- Jenkins Deploy database Flyway app not able to network to eu-west-1


----------------------- Test Env with ONE Read Replica -----------------
JOB_NAME_ARR=($JOB_NAME)
echo APP_NAME=${JOB_NAME_ARR[1]}

case $REGION in
    us-east-1)
        REGION2=us-1
        DATABASE_URL=postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-us-east-1.c1lwzjddrfro.us-east-1.rds.amazonaws.com:5432/postgres
        if [ "$ENV" == "test" ]; then
            DATABASE_URLS_READ='postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-r1-us-east-1d.c1lwzjddrfro.us-east-1.rds.amazonaws.com:5432/postgres'
        else
            DATABASE_URLS_READ='postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-r1-us-east-1d.c1lwzjddrfro.us-east-1.rds.amazonaws.com:5432/postgres,postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-r2-us-east-1e.c1lwzjddrfro.us-east-1.rds.amazonaws.com:5432/postgres'
        fi
        ;;
    eu-west-1)
        REGION2=eu-1
        DATABASE_URL=postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-eu-west-1.czpjmzx3ykqm.eu-west-1.rds.amazonaws.com:5432/postgres
        DATABASE_URLS_READ='postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-r1-eu-west-1a.czpjmzx3ykqm.eu-west-1.rds.amazonaws.com:5432/postgres,postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-r2-eu-west-1b.czpjmzx3ykqm.eu-west-1.rds.amazonaws.com:5432/postgres'
        ;;
esac

echo REGION2=$REGION2
echo DATABASE_URL=$DATABASE_URL
echo DATABASE_URLS_READ=$DATABASE_URLS_READ

-------------------------- All Envs with TWO Read Replica -----------------
JOB_NAME_ARR=($JOB_NAME)
echo APP_NAME=${JOB_NAME_ARR[1]}

case $REGION in
    us-east-1)
        REGION2=us-1
        DATABASE_URL=postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-us-east-1.c1lwzjddrfro.us-east-1.rds.amazonaws.com:5432/postgres
        DATABASE_URLS_READ='postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-r1-us-east-1d.c1lwzjddrfro.us-east-1.rds.amazonaws.com:5432/postgres,postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-r2-us-east-1e.c1lwzjddrfro.us-east-1.rds.amazonaws.com:5432/postgres'
        ;;
    eu-west-1)
        REGION2=eu-1
        DATABASE_URL=postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-eu-west-1.czpjmzx3ykqm.eu-west-1.rds.amazonaws.com:5432/postgres
        DATABASE_URLS_READ='postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-r1-eu-west-1a.czpjmzx3ykqm.eu-west-1.rds.amazonaws.com:5432/postgres,postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-r2-eu-west-1b.czpjmzx3ykqm.eu-west-1.rds.amazonaws.com:5432/postgres'
        ;;
esac

echo REGION2=$REGION2
echo DATABASE_URL=$DATABASE_URL
echo DATABASE_URLS_READ=$DATABASE_URLS_READ

---------------------- New Docker 1.9.1 beanstalk multi-container ---

64bit Amazon Linux 2015.09 v2.0.7 running Multi-container Docker 1.9.1 (Generic)
aws-elasticbeanstalk-amzn-2015.09.1.x86_64-ecs-pv-201602102343 (ami-a6cce6cc)

-------- CloudFront ---- Property not yet supported
                                "OriginSslProtocols": {
                                    "Quantity": 3,
                                    "Items": ["TLSv1", "TLSv1.1", "TLSv1.2"]
                                }
        Also: "Compress": "true"


        
-------------------
aws cloudfront get-distribution-config --id E1O9D82OFKC258
-------------------
UPDATE_ROLLBACK_FAILED state: https://blogs.aws.amazon.com/application-management/post/Tx11YT4MHFDZMK6/Continue-Rolling-Back-an-Update-for-AWS-CloudFormation-stacks-in-the-UPDATE-ROLL

AWS CloudFormation now offers a third option: continue update rollback, which you can initiate from the AWS CloudFormation console or with the continue-update-rollback command in the AWS Command Line Interface (CLI). This functionality is enabled for all the stacks in the UPDATE_ROLLBACK_FAILED state.
-------------------
Tokyo porting notes:
    "64bit Amazon Linux 2015.09 v2.0.8 running Multi-container Docker 1.9.1 (Generic)",
    aws-elasticbeanstalk-amzn-2015.09.2.x86_64-ecs-pv-201602242103 (ami-d2f9fabc)
    ---
    64bit Amazon Linux 2015.09 v2.0.7 running Multi-container Docker 1.9.1 (Generic)
    aws-elasticbeanstalk-amzn-2015.09.1.x86_64-ecs-pv-201602101816 (ami-a98d89c7)
    ---
    "64bit Amazon Linux 2015.09 v2.0.6 running Multi-container Docker 1.7.1 (Generic)"
    aws-elasticbeanstalk-amzn-2015.09.1.x86_64-ecs-pv-201512301911 (ami-9e5a6bf0)
-------------------
    No Solution Stack named '64bit Amazon Linux 2015.09 v2.0.6 running Multi-container Docker 1.7.1 (Generic)' found.

bi jenkins--------------------
JOB_NAME_ARR=($JOB_NAME)
echo APP_NAME=${JOB_NAME_ARR[1]}

case $REGION in
    us-east-1)
        REGION2=us-1
        DATABASE_URL=postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-us-east-1.c1lwzjddrfro.us-east-1.rds.amazonaws.com:5432/postgres
        if [ "$ENV" == "dev" ]; then
            DATABASE_URLS_READ='postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-r1-us-east-1d.c1lwzjddrfro.us-east-1.rds.amazonaws.com:5432/postgres'
        else
            DATABASE_URLS_READ='postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-r1-us-east-1d.c1lwzjddrfro.us-east-1.rds.amazonaws.com:5432/postgres,postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-r2-us-east-1e.c1lwzjddrfro.us-east-1.rds.amazonaws.com:5432/postgres'
        fi
        ;;
    eu-west-1)
        REGION2=eu-1
        DATABASE_URL=postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-eu-west-1.czpjmzx3ykqm.eu-west-1.rds.amazonaws.com:5432/postgres
        DATABASE_URLS_READ='postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-r1-eu-west-1a.czpjmzx3ykqm.eu-west-1.rds.amazonaws.com:5432/postgres,postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-r2-eu-west-1b.czpjmzx3ykqm.eu-west-1.rds.amazonaws.com:5432/postgres'
        ;;
esac

echo REGION2=$REGION2
echo DATABASE_URL=$DATABASE_URL
echo DATABASE_URLS_READ=$DATABASE_URLS_READ
------------------
JOB_NAME_ARR=($JOB_NAME)
echo APP_NAME=${JOB_NAME_ARR[1]}

case $REGION in
    us-east-1)
        REGION2=us-1
        DATABASE_URL=postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-us-east-1.c1lwzjddrfro.us-east-1.rds.amazonaws.com:5432/postgres
        ;;
    eu-west-1)
        REGION2=eu-1
        DATABASE_URL=postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-eu-west-1.czpjmzx3ykqm.eu-west-1.rds.amazonaws.com:5432/postgres
        ;;
    ap-northeast-1)
        REGION2=eu-1
        DATABASE_URL=postgres://$DATABASE_USERNAME:$DATABASE_PASSWORD@bi-$ENV-rds-dw-ap-northeast-1.csujpxqaws2p.ap-northeast-1.rds.amazonaws.com:5432/postgres
        ;;
esac

echo REGION2=$REGION2
echo DATABASE_URL=$DATABASE_URL
---
# Elastic Beanstalk parameters
EB_APP_NAME=$APP_NAME-$REGION
EB_ENV_NAME=$ENV-bi-dp-$REGION
EB_APP_VERSION=$BI_DATAPIPELINE_SERVICE_VERSION-$ENV+deploy.$BUILD_NUMBER

# Dockerrun.aws.json parameters
AIP_HOSTNAME=aip-$ENV-$REGION2.aliniqbis.local
DATAPIPELINE_SERVICE_QUEUE=https://sqs.$REGION.amazonaws.com/661072482170/bi-$ENV-sqs-datapipeline-service
DATAPIPELINE_QUEUE_TIMEOUT=$DATAPIPELINE_QUEUE_TIMEOUT
-----------------------------------
ETL: 
---
case $REGION in
    us-east-1)
        REGION2=us-1
        DATABASE_URL=jdbc:postgresql://bi-$ENV-rds-dw-us-east-1.c1lwzjddrfro.us-east-1.rds.amazonaws.com:5432/postgres
        ;;
    eu-west-1)
        REGION2=eu-1
        DATABASE_URL=jdbc:postgresql://bi-$ENV-rds-dw-eu-west-1.czpjmzx3ykqm.eu-west-1.rds.amazonaws.com:5432/postgres
        ;;
esac

echo REGION2=$REGION2
echo DATABASE_URL=$DATABASE_URL
---
# Directory name with the app config in the microservice-configs git repo
APP_NAME=bi-dataprocess-service

# Elastic Beanstalk parameters
EB_APP_NAME=etl-$REGION
EB_ENV_NAME=$ENV-$EB_APP_NAME
EB_APP_VERSION=$BI_DATAPROCESS_SERVICE_VERSION-$ENV+deploy.$BUILD_NUMBER

# Dockerrun.aws.json parameters
BI_SNS_DATA_LOADED=arn:aws:sns:$REGION:661072482170:bi-$ENV-sns-data-loaded
AIP_HOSTNAME=aip-$ENV-$REGION2.aliniqbis.local

-----------------------------------


---

JOB_NAME_ARR=($JOB_NAME)
echo APP_NAME=${JOB_NAME_ARR[1]}

#Changing environment name for devops, as aws limits environment name  up to 23 characters
echo EB_ENV_NAME=$ENV-aip-chro-$REGION
if [[ $ENV = "devops" ]];
then
    echo EB_ENV_NAME=$ENV-chro-$REGION;
fi

case $REGION in
    us-east-1)
        REGION2=us-1
        ;;
    eu-west-1)
        REGION2=eu-1
        ;;
    ap-northeast-1)
        REGION2=ap-1
        ;;
esac

echo REGION2=$REGION2

---

bi-prod-rds-dw-ap-northeast-1.csujpxqaws2p.ap-northeast-1.rds.amazonaws.com:5432


--------

case $REGION in
    us-east-1)
        REGION2=us-1
        case $ENV in
            dev)
                RESOLVER=10.85.8.2
                ;;
            test)
                RESOLVER=10.85.16.2
                ;;
            qa)
                RESOLVER=10.85.24.2
                ;;
            prod)
                RESOLVER=10.85.32.2
                ;;
            prod2)
                RESOLVER=10.85.56.2
                ;;
            devops)
                RESOLVER=10.85.48.2
                ;;
            beta)
                RESOLVER=10.85.40.2
                ;;
        esac
        ;;
    eu-west-1)
        REGION2=eu-1
        case $ENV in
            prod)
                RESOLVER=10.42.32.2
                ;;
        esac
        ;;
    ap-northeast-1)
        REGION2=ap-1
        case $ENV in
            prod)
                RESOLVER=10.166.32.2
                ;;
        esac
        ;;
esac

echo REGION2=$REGION2
echo RESOLVER=$RESOLVER
<<<<<<< HEAD


----- docker machine -----
ssh -i ~/.docker/machine/machines/aip-adm-docker-machine-1-eu-west-1/id_rsa ubuntu@52.17.151.21


export BI_DATABASE_URL=jdbc:postgresql://bi-prod-rds-dw-eu-west-1.czpjmzx3ykqm.eu-west-1.rds.amazonaws.com:5432/postgres
$ export BI_DATABASE_USER=sa
$ export BI_DATABASE_PASSWORD=password (may need to escape special characters like '!' as '\!')
$ eval $(aws ecr get-login --region us-east-1)
$ docker pull 661072482170.dkr.ecr.us-east-1.amazonaws.com/add/bi-database-pg:latest
$ docker run --rm -ti 661072482170.dkr.ecr.us-east-1.amazonaws.com/add/bi-database-pg:latest flyway -url=$BI_DATABASE_URL -user=$BI_DATABASE_USER -password=$BI_DATABASE_PASSWORD -baselineOnMigrate=true -validateOnMigrate=false -target=20160301.35 migrate

-------------
3/15/16 - Case #1636971991
Hello Randy,

Thank you very much first of all for your patience.
Our Service team has confirmed that there's indeed a problem with the R53 registering the Alias.
They will apply fix on this and should be resolved within the next month.

In the meantime, if the current workaround is not suitable for you, another workaround you could do is to use this public RostedZones for each of the regions below for your Alias Hosted ID, ( Apply these values to your R53HostedZoneID Parameter)

sa-east-1 = Z2P70J7HTTTPLU
ap-southeast-2 = Z1GM3OXH4ZPM65
us-east-1 = Z35SXDOTRQ7X7K
us-west-1 = Z368ELLRRE2KJ0
us-west-2 = Z1H1FL5HABSF5
eu-west-1 = Z32O12XQLNTSW2
ap-northeast-1 = Z14GRHDCWA56QT
ap-southeast-1 = Z1LMS91P8CMLE5

Thank you once again for your patience.
I hope this clarifies things for you.
If you have any question on this, please do not hesitate to let us know.

Best regards,

Stephen S.

-------------
=======
-----
Admin VPC NAT IP: 52.3.143.228/32
-----
>>>>>>> origin/ICP-3165_Rollout_CDN
